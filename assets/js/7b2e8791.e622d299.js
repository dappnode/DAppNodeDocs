"use strict";(self.webpackChunkd_app_node_docs=self.webpackChunkd_app_node_docs||[]).push([[642],{3555:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>c,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"dev/sdk/commands","title":"Main commands","description":"This page covers the top three functionalities of DappnodeSDK: init, build, and publish. Each command plays a crucial role in the development and deployment process of dappnode packages (DNPs).","source":"@site/docs/dev/sdk/commands.md","sourceDirName":"dev/sdk","slug":"/dev/sdk/commands","permalink":"/docs/dev/sdk/commands","draft":false,"unlisted":false,"editUrl":"https://github.com/dappnode/DappnodeDocs/edit/master/docs/dev/sdk/commands.md","tags":[],"version":"current","frontMatter":{},"sidebar":"devSidebar","previous":{"title":"Overview","permalink":"/docs/dev/sdk/overview"},"next":{"title":"SDK-Publish","permalink":"/docs/dev/sdk/sdk-publish"}}');var s=o(4848),t=o(8453);const d={},a="Main commands",r={},l=[{value:"<code>init</code>",id:"init",level:2},{value:"<code>build</code>",id:"build",level:2},{value:"<code>publish</code>",id:"publish",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"main-commands",children:"Main commands"})}),"\n",(0,s.jsxs)(n.p,{children:["This page covers the top three functionalities of DappnodeSDK: ",(0,s.jsx)(n.code,{children:"init"}),", ",(0,s.jsx)(n.code,{children:"build"}),", and ",(0,s.jsx)(n.code,{children:"publish"}),". Each command plays a crucial role in the development and deployment process of dappnode packages (DNPs)."]}),"\n",(0,s.jsx)(n.h2,{id:"init",children:(0,s.jsx)(n.code,{children:"init"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"init"})," command allows you to initialize a new DAppNodePackage (DNP) repository. This is the first step when creating a new DNP. To use the ",(0,s.jsx)(n.code,{children:"init"})," command, run the following:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npx @dappnode/dappnodesdk init\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The following are all the possible ",(0,s.jsx)(n.code,{children:"init"})," options:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Options:",children:'      --dir, --directory   Change the base directory    [string] [default: "./"]\n      --compose_file_name  Compose file for docker-compose\n                                        [string] [default: "docker-compose.yml"]\n      --silent             Silence output to terminal                  [boolean]\n      --verbose, --debug   Show more output to terminal                [boolean]\n  -y, --yes                Answer yes or the default option to all initializatio\n                           n questions                                 [boolean]\n  -f, --force              Overwrite previous project if necessary     [boolean]\n  -h, --help               Show help                                   [boolean]\n  -v, --version            Show version number                         [boolean]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"build",children:(0,s.jsx)(n.code,{children:"build"})}),"\n",(0,s.jsx)(n.p,{children:"The build command is used to build a new version of a DNP. It generates the IPFS hash for the package. To use the build command, run the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npx @dappnode/dappnodesdk build\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The following are all the possible ",(0,s.jsx)(n.code,{children:"build"})," options:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Options:",children:'      --dir, --directory   Change the base directory    [string] [default: "./"]\n      --compose_file_name  Compose file for docker-compose\n                                        [string] [default: "docker-compose.yml"]\n      --silent             Silence output to terminal                  [boolean]\n      --verbose, --debug   Show more output to terminal                [boolean]\n  -p, --provider           Specify an ipfs provider: "dappnode" (default), "infu\n                           ra", "localhost:5002"           [default: "dappnode"]\n  -t, --timeout            Overrides default build timeout: "15h", "20min 15s",\n                           "5000". Specs npmjs.com/package/timestring\n                                                              [default: "60min"]\n      --skip_save          For testing only: do not save image to disk [boolean]\n      --skip_upload        For testing only: do not upload image from disk\n                                                                       [boolean]\n  -h, --help               Show help                                   [boolean]\n  -v, --version            Show version number                         [boolean]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"publish",children:(0,s.jsx)(n.code,{children:"publish"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"publish"})," command is used to publish a new version of the DNP in an Aragon Package Manager Repository. To use the ",(0,s.jsx)(n.code,{children:"publish"})," command, run the following:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npx @dappnode/dappnodesdk publish\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The following are all the possible ",(0,s.jsx)(n.code,{children:"publish"})," options:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Options:",children:'      --dir, --directory      Change the base directory [string] [default: "./"]\n      --compose_file_name     Compose file for docker-compose\n                                        [string] [default: "docker-compose.yml"]\n      --silent                Silence output to terminal               [boolean]\n      --verbose, --debug      Show more output to terminal             [boolean]\n      --type                  Semver update type. Can also be provided with env\n                              RELEASE_TYPE=[type] or via TRAVIS_TAG=release (pat\n                              ch), TRAVIS_TAG=release/[type]\n                                   [string] [choices: "major", "minor", "patch"]\n  -p, --provider              Specify a provider (overwrittes content_provider a\n                              nd eth_provider): "dappnode" (default), "infura",\n                              "http://localhost:8545"                   [string]\n      --eth_provider          Specify an eth provider: "dappnode" (default), "in\n                              fura", "localhost:8545"\n                                                  [string] [default: "dappnode"]\n      --content_provider      Specify an ipfs provider: "dappnode" (default), "i\n                              nfura", "http://localhost:5001"\n                                                  [string] [default: "dappnode"]\n      --upload_to             Specify where to upload the release\n                                    [choices: "ipfs", "swarm"] [default: "ipfs"]\n  -a, --developer_address     If there is no existing repo for this DNP the publ\n                              ish command needs a developer address. If it is no\n                              t provided as an option a prompt will request it\n                                                                        [string]\n  -t, --timeout               Overrides default build timeout: "15h", "20min 15s\n                              ", "5000". Specs npmjs.com/package/timestring\n                                                                        [string]\n      --github_release        Publish the release on the Github repo specified i\n                              n the manifest. Requires a GITHUB_TOKEN ENV to aut\n                              henticate                                [boolean]\n      --dappnode_team_preset  Specific set of options used for internal DAppNode\n                               releases. Caution: options may change without not\n                              ice.                                     [boolean]\n  -h, --help                  Show help                                [boolean]\n  -v, --version               Show version number                      [boolean]```\n'})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>a});var i=o(6540);const s={},t=i.createContext(s);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);