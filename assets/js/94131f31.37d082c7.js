"use strict";(self.webpackChunkd_app_node_docs=self.webpackChunkd_app_node_docs||[]).push([[2701],{28406:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"dev/references/setup-wizard","title":"Wizard Reference","description":"The setup wizard for Dappnode packages helps automate the package customization and improve its user experience. You can allow users to conveniently edit environment variables, port mappings, and upload files while interacting with a simple web form, right before installing the package.","source":"@site/docs/dev/references/setup-wizard.md","sourceDirName":"dev/references","slug":"/dev/references/setup-wizard","permalink":"/docs/dev/references/setup-wizard","draft":false,"unlisted":false,"editUrl":"https://github.com/dappnode/DappnodeDocs/edit/master/docs/dev/references/setup-wizard.md","tags":[],"version":"current","frontMatter":{},"sidebar":"devSidebar","previous":{"title":"Dappnode Manifest","permalink":"/docs/dev/references/manifest"},"next":{"title":"Notifications","permalink":"/docs/dev/references/notifications"}}');var s=i(74848),l=i(28453);const d={},t="Wizard Reference",a={},c=[{value:"How to use",id:"how-to-use",level:2},{value:"Example",id:"example",level:2},{value:"version",id:"version",level:2},{value:"fields",id:"fields",level:2},{value:"id",id:"id",level:3},{value:"target",id:"target",level:3},{value:"environment",id:"environment",level:4},{value:"name",id:"name",level:5},{value:"service",id:"service",level:5},{value:"portMapping",id:"portmapping",level:4},{value:"containerPort",id:"containerport",level:5},{value:"service",id:"service-1",level:5},{value:"namedVolumeMountpoint",id:"namedvolumemountpoint",level:4},{value:"volumeName",id:"volumename",level:5},{value:"allNamedVolumesMountpoint",id:"allnamedvolumesmountpoint",level:4},{value:"fileUpload",id:"fileupload",level:4},{value:"path",id:"path",level:5},{value:"service",id:"service-2",level:5},{value:"title",id:"title",level:3},{value:"description",id:"description",level:3},{value:"secret",id:"secret",level:3},{value:"pattern",id:"pattern",level:3},{value:"patternErrorMessage",id:"patternerrormessage",level:3},{value:"enum",id:"enum",level:3},{value:"required",id:"required",level:3},{value:"if",id:"if",level:3}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"wizard-reference",children:"Wizard Reference"})}),"\n",(0,s.jsx)(n.p,{children:"The setup wizard for Dappnode packages helps automate the package customization and improve its user experience. You can allow users to conveniently edit environment variables, port mappings, and upload files while interacting with a simple web form, right before installing the package."}),"\n",(0,s.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,s.jsxs)(n.p,{children:["To add this functionality, create a file ",(0,s.jsx)(n.code,{children:"setup-wizard.yml"})," in the root of your Dappnode package directory. Both JSON and YAML formats are supported, but YAML makes writing markdown text blocks much easier (it's used in the ",(0,s.jsx)(n.a,{href:"#description",children:(0,s.jsx)(n.code,{children:"description"})})," property)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"  DappnodePackage-my-package.public.dappnode.eth/\n  \u251c\u2500\u2500 build\n  \u2502   \u251c\u2500\u2500 ...\n  \u2502   \u2514\u2500\u2500 Dockerfile\n  \u251c\u2500\u2500 avatar-my-package.png\n  \u251c\u2500\u2500 dappnode_package.json\n  \u251c\u2500\u2500 docker-compose.yml\n+ \u2514\u2500\u2500 setup-wizard.yml\n"})}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'version: "2"\nfields:\n  - id: payoutAddress,\n    target:\n      type: environment\n      name: PAYOUT_ADDRESS\n      service: service1\n    title: Payout address\n    description: >-\n      Address to send **payouts** too. [More info](https://more.info)\n      Supports markdown and multiline\n    secret: true\n    pattern: "^0x[a-fA-F0-9]{40}$"\n    patternErrorMessage: Must be a valid address (0x1fd16a...)\n    enum:\n      - normal\n      - archive\n      - advanced\n    required: true\n    if: { "mode": { "enum": ["advanced"] } }\n'})}),"\n",(0,s.jsx)(n.h2,{id:"version",children:"version"}),"\n",(0,s.jsxs)(n.p,{children:["Identify this setup wizard version. Currently only supports version ",(0,s.jsx)(n.code,{children:'"2"'})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["is ",(0,s.jsx)(n.strong,{children:"required"})]}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:["value: ",(0,s.jsx)(n.code,{children:'"2"'})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"fields",children:"fields"}),"\n",(0,s.jsx)(n.p,{children:"Setup wizard fields. Fields to show in the setup wizard form UI"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["is ",(0,s.jsx)(n.strong,{children:"required"})]}),"\n",(0,s.jsxs)(n.li,{children:["type: Array type: ",(0,s.jsx)(n.code,{children:"object[]"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["All items must be of the type: ",(0,s.jsx)(n.code,{children:"object"})," with the following properties:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Default"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"target"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"id"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Required"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"title"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Required"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"description"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Required"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"secret"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pattern"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"patternErrorMessage"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enum"})}),(0,s.jsx)(n.td,{children:"array"}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"required"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"if"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"id",children:"id"}),"\n",(0,s.jsxs)(n.p,{children:["Unique property ID required for internal form parsing, and to use the ",(0,s.jsx)(n.code,{children:"if"})," conditional block."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["is ",(0,s.jsx)(n.strong,{children:"required"})]}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"id: payoutAddress\n"})}),"\n",(0,s.jsx)(n.h3,{id:"target",children:"target"}),"\n",(0,s.jsx)(n.p,{children:"Maps the setup wizard field to a package configuration option. Supports:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#environment",children:(0,s.jsx)(n.code,{children:"environment"})}),": For environment variables"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#portMapping",children:(0,s.jsx)(n.code,{children:"portMapping"})}),": For port mapping"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#namedVolumeMountpoint",children:(0,s.jsx)(n.code,{children:"namedVolumeMountpoint"})}),": To allow hosting a specific package volume into a different drive or mountpoint"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#allNamedVolumesMountpoint",children:(0,s.jsx)(n.code,{children:"allNamedVolumesMountpoint"})}),": To allow hosting all package volumes into a different drive or mountpoint"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#fileUpload",children:(0,s.jsx)(n.code,{children:"fileUpload"})}),": To upload user files to the package container"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"environment",children:"environment"}),"\n",(0,s.jsx)(n.p,{children:"To customize environment variables with user input. Targeted variables must be declared in the package's docker-compose. You can customize the type of input shown in the UI with this field properties"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#secret",children:(0,s.jsx)(n.code,{children:"secret"})}),": Hides input, to collect sensitive data."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#pattern",children:(0,s.jsx)(n.code,{children:"pattern"})}),": To validate input against any Regex expression."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#enum",children:(0,s.jsx)(n.code,{children:"enum"})}),": Show as a select dropdown menu."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"It exists two ways of defining environment variables.\nThe first one, where you define one environment var for one service, you the format to do it is the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"target:\n  type: environment\n  name: PAYOUT_ADDRESS\n  service: service1\n"})}),"\n",(0,s.jsx)(n.p,{children:"In case you want to define an environment variable that is used in multiple services you can define it in the next way:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"target:\n  type: environment\n  name: PAYOUT_ADDRESS\n  service: [service1, service2, service2]\n"})}),"\n",(0,s.jsx)(n.h5,{id:"name",children:"name"}),"\n",(0,s.jsx)(n.p,{children:"The name of the environment variable as declared in the docker-compose."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["is ",(0,s.jsx)(n.strong,{children:"required"})]}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"name: PAYOUT_ADDRESS\n"})}),"\n",(0,s.jsx)(n.h5,{id:"service",children:"service"}),"\n",(0,s.jsx)(n.p,{children:"In multi-service package, which service should be targeted with this setting."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Examples:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"service: service1\n"})}),"\n",(0,s.jsx)(n.h4,{id:"portmapping",children:"portMapping"}),"\n",(0,s.jsx)(n.p,{children:"To customize port mappings with user input. Targeted container port must be declared in the package's docker-compose."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"target:\n  type: portMapping\n  containerPort: 9554/UDP\n  service: service1\n"})}),"\n",(0,s.jsx)(n.h5,{id:"containerport",children:"containerPort"}),"\n",(0,s.jsxs)(n.p,{children:["Exposed container port to map to. Must follow the format ",(0,s.jsx)(n.code,{children:"{portNumber}"})," or ",(0,s.jsx)(n.code,{children:"{portNumber}/{PROTOCOL}"}),", where PROTOCOL must be ",(0,s.jsx)(n.code,{children:"TCP"})," or ",(0,s.jsx)(n.code,{children:"UDP"})," in all caps."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["is ",(0,s.jsx)(n.strong,{children:"required"})]}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Examples:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"containerPort: 9554\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"containerPort: 9554/TCP\n"})}),"\n",(0,s.jsx)(n.h5,{id:"service-1",children:"service"}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"#service",children:"service"})]}),"\n",(0,s.jsx)(n.h4,{id:"namedvolumemountpoint",children:"namedVolumeMountpoint"}),"\n",(0,s.jsx)(n.p,{children:"To allow hosting a specific package volume into a different drive or mountpoint"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"target:\n  type: namedVolumeMountpoint\n  volumeName: blockchain_data\n"})}),"\n",(0,s.jsx)(n.h5,{id:"volumename",children:"volumeName"}),"\n",(0,s.jsxs)(n.p,{children:["Name of the docker volume to allow the user to change its mountpoint. Must have the exact same name as declared in the package's compose ",(0,s.jsx)(n.code,{children:"volumes"})," section."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["is ",(0,s.jsx)(n.strong,{children:"required"})]}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"volumeName: blockchain_data\n"})}),"\n",(0,s.jsx)(n.h4,{id:"allnamedvolumesmountpoint",children:"allNamedVolumesMountpoint"}),"\n",(0,s.jsx)(n.p,{children:"To allow hosting all package volumes into a different drive or mountpoint at once. Use this option if your package has multiple heavy volumes whose mountpoint should be changed at once."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"target:\n  type: allNamedVolumesMountpoint\n"})}),"\n",(0,s.jsx)(n.h4,{id:"fileupload",children:"fileUpload"}),"\n",(0,s.jsx)(n.p,{children:"To allow uploading user files to the package container"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"target:\n  type: fileUpload\n  path: /usr/src/config.json\n  service: service1\n"})}),"\n",(0,s.jsx)(n.h5,{id:"path",children:"path"}),"\n",(0,s.jsx)(n.p,{children:"Destination path to upload the file to. Must be a valid absolute path in the package container."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["is ",(0,s.jsx)(n.strong,{children:"required"})]}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"path: /usr/src/config.json\n"})}),"\n",(0,s.jsx)(n.h5,{id:"service-2",children:"service"}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"#service",children:"service"})]}),"\n",(0,s.jsx)(n.h3,{id:"title",children:"title"}),"\n",(0,s.jsx)(n.p,{children:"The Title Schema"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["is ",(0,s.jsx)(n.strong,{children:"required"})]}),"\n",(0,s.jsxs)(n.li,{children:["default: ",(0,s.jsx)(n.code,{children:'""'})]}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"title: Payout address\n"})}),"\n",(0,s.jsx)(n.h3,{id:"description",children:"description"}),"\n",(0,s.jsx)(n.p,{children:"The Description Schema"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["is ",(0,s.jsx)(n.strong,{children:"required"})]}),"\n",(0,s.jsxs)(n.li,{children:["default: ",(0,s.jsx)(n.code,{children:'""'})]}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"description: >-\n  Address to send **payouts** too. [More info](https://more.info)\n  Supports markdown and multiline\n"})}),"\n",(0,s.jsx)(n.h3,{id:"secret",children:"secret"}),"\n",(0,s.jsx)(n.p,{children:'Display field input as hidden. Use to collect sensitive data. It will automatically activate if the field name contains "secret" "passphrase" or "password". Only available with target environment.'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"is optional"}),"\n",(0,s.jsxs)(n.li,{children:["default: ",(0,s.jsx)(n.code,{children:"false"})]}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"secret: true\n"})}),"\n",(0,s.jsx)(n.h3,{id:"pattern",children:"pattern"}),"\n",(0,s.jsxs)(n.p,{children:["Enforce this property to satisfy a regex before continuing. Only available with target environment. Use also ",(0,s.jsx)(n.a,{href:"#patternErrorMessage",children:(0,s.jsx)(n.code,{children:"patternErrorMessage"})})," to show a nicer error message when regex validation fails."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"is optional"}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'pattern: "^0x[a-fA-F0-9]{40}$"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"patternerrormessage",children:"patternErrorMessage"}),"\n",(0,s.jsx)(n.p,{children:"Error to show if the regex pattern validation fails. Only available with target environment."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"is optional"}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Examples:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"patternErrorMessage: Must be a valid address (0x1fd16a...)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"patternErrorMessage: Must be at least 8 characters long\n"})}),"\n",(0,s.jsx)(n.h3,{id:"enum",children:"enum"}),"\n",(0,s.jsx)(n.p,{children:"List valid options. Will automatically display the input as a select menu. Only available with target environment."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"is optional"}),"\n",(0,s.jsxs)(n.li,{children:["type: Array type: ",(0,s.jsx)(n.code,{children:"string[]"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["All items must be of the type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsx)(n.p,{children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"enum:\n  - normal\n  - archive\n  - advanced\n"})}),"\n",(0,s.jsx)(n.h3,{id:"required",children:"required"}),"\n",(0,s.jsx)(n.p,{children:"Enforce this property to be provided before continuing"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"is optional"}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"required: true\n"})}),"\n",(0,s.jsx)(n.h3,{id:"if",children:"if"}),"\n",(0,s.jsxs)(n.p,{children:["Only display the field property if the ",(0,s.jsx)(n.code,{children:"if"})," schema is valid against the current form data provided by the user. The form data is an object with the structure ",(0,s.jsx)(n.code,{children:"{ [field.id]: JSONSchema }"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"is optional"}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Examples:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'if: { "mode": { "enum": ["advanced"] } }\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'if: { "mode": { "enum": ["archive"] } }\n'})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>t});var r=i(96540);const s={},l=r.createContext(s);function d(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);