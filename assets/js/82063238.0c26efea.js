"use strict";(self.webpackChunkd_app_node_docs=self.webpackChunkd_app_node_docs||[]).push([[7181],{1783:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"dev/references/docker-compose","title":"Docker compose file","description":"Dappnode packages are built upon Docker containers. The heart of defining how these containers run and interact lies in the docker-compose.yml file. In this guide, we will explain the typical structure of the docker-compose.yml file for a Dappnode package.","source":"@site/docs/dev/references/docker-compose.md","sourceDirName":"dev/references","slug":"/dev/references/docker-compose","permalink":"/docs/dev/references/docker-compose","draft":false,"unlisted":false,"editUrl":"https://github.com/dappnode/DappnodeDocs/edit/master/docs/dev/references/docker-compose.md","tags":[],"version":"current","frontMatter":{},"sidebar":"devSidebar","previous":{"title":"SDK-Publish","permalink":"/docs/dev/sdk/sdk-publish"},"next":{"title":"Dappnode Manifest","permalink":"/docs/dev/references/manifest"}}');var r=s(4848),o=s(8453);const t={},a="Docker compose file",l={},c=[{value:"Basic Example",id:"basic-example",level:2},{value:"Complex Example",id:"complex-example",level:2},{value:"Notable Features",id:"notable-features",level:3},{value:"Environment Variables",id:"environment-variables",level:4},{value:"The <code>UPSTREAM_VERSION</code> Argument",id:"the-upstream_version-argument",level:4},{value:"The <code>EXTRA_OPTS</code> Environment Variable",id:"the-extra_opts-environment-variable",level:4}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"docker-compose-file",children:"Docker compose file"})}),"\n",(0,r.jsxs)(n.p,{children:["Dappnode packages are built upon Docker containers. The heart of defining how these containers run and interact lies in the ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," file. In this guide, we will explain the typical structure of the ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," file for a Dappnode package."]}),"\n",(0,r.jsx)(n.h2,{id:"basic-example",children:"Basic Example"}),"\n",(0,r.jsxs)(n.p,{children:["A simple ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," file looks like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'version: "3.5"\nservices:\n  test.public.dappnode.eth:\n    build: .\n    image: "test.public.dappnode.eth:0.1.0"\n    restart: unless-stopped\n'})}),"\n",(0,r.jsx)(n.p,{children:"This example illustrates the basic elements, which include the version of the docker-compose file, services, and the service's basic attributes."}),"\n",(0,r.jsx)(n.h2,{id:"complex-example",children:"Complex Example"}),"\n",(0,r.jsxs)(n.p,{children:["A more intricate ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," file could look like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'version: "3.5"\nservices:\n  beacon-chain:\n    build:\n      context: beacon-chain\n      args:\n        UPSTREAM_VERSION: v4.0.7\n    volumes:\n      - "beacon-chain-data:/data"\n    ports:\n      - "12603:12603/tcp"\n      - "12603:12603/udp"\n    restart: unless-stopped\n    environment:\n      P2P_PORT: 12603\n      CHECKPOINT_SYNC_URL: "https://checkpoints.mainnet.lukso.network"\n      EXTRA_OPTS: ""\n      LOG_VERBOSITY: info\n      MIN_SYNC_PEERS: "0"\n      MAX_PEERS: "250"\n      SUBSCRIBE_ALL_SUBNETS: "true"\n  validator:\n    build:\n      context: validator\n      args:\n        UPSTREAM_VERSION: v4.0.7\n    volumes:\n      - "validator-data:/data"\n    restart: unless-stopped\n    environment:\n      LOG_VERBOSITY: info\n      GRAFFITI: validating_from_DAppNode\n      ENABLE_DOPPELGANGER: "true"\n      EXTRA_OPTS: ""\nvolumes:\n  beacon-chain-data: {}\n  validator-data: {}\n'})}),"\n",(0,r.jsx)(n.p,{children:"In the complex example, you'll find:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Multiple services (like ",(0,r.jsx)(n.code,{children:"beacon-chain"})," and ",(0,r.jsx)(n.code,{children:"validator"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Build arguments, such as the relevant ",(0,r.jsx)(n.code,{children:"UPSTREAM_VERSION"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Defined volumes, ports, and environment variables."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"notable-features",children:"Notable Features"}),"\n",(0,r.jsx)(n.h4,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["All environment variables (",(0,r.jsx)(n.code,{children:"envs"}),") defined in the ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," file will be visible in the package config post-installation. Users can modify these."]}),"\n",(0,r.jsxs)(n.li,{children:["If the package has a ",(0,r.jsx)(n.code,{children:"setup-wizard"}),', those environment variables not set within it will be hidden by default in the configuration. Users can view these by selecting "Show advanced config".']}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"the-upstream_version-argument",children:["The ",(0,r.jsx)(n.code,{children:"UPSTREAM_VERSION"})," Argument"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"UPSTREAM_VERSION"})," argument is mandatory if you wish to leverage GitHub actions that automatically create PRs when there's a new release in the upstream repository."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["In the Dockerfile, ",(0,r.jsx)(n.code,{children:"UPSTREAM_VERSION"})," is usually declared and used like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dockerfile",children:"ARG UPSTREAM_VERSION\nFROM consensys/teku:$UPSTREAM_VERSION\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"upstreamVersion"})," and ",(0,r.jsx)(n.code,{children:"upstreamRepo"})," fields need to be defined in the ",(0,r.jsx)(n.code,{children:"dappnode_package.json"})," file for the GitHub actions to work. Here is an example:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\n  ...\n  "upstreamVersion": "23.8.0",\n  "upstreamRepo": "ConsenSys/teku",\n  ...\n}\n'})})]}),"\n",(0,r.jsxs)(n.h4,{id:"the-extra_opts-environment-variable",children:["The ",(0,r.jsx)(n.code,{children:"EXTRA_OPTS"})," Environment Variable"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"EXTRA_OPTS"})," is an environment variable that allows users to add any flags that might not have been included by default."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Here's a typical use case for ",(0,r.jsx)(n.code,{children:"EXTRA_OPTS"})," in the entrypoint script:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"exec /opt/teku/bin/teku \\\n    --network=prater \\\n    ...(omitting other flags) \\\n    --log-destination=CONSOLE \\\n    $EXTRA_OPTS\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(6540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);