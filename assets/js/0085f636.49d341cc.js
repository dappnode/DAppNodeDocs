"use strict";(self.webpackChunkd_app_node_docs=self.webpackChunkd_app_node_docs||[]).push([[9589],{424:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"user/rollups/optimism","title":"Optimism Rollup","description":"Optimism is Ethereum\'s Layer 2 solution, leveraging Optimistic Rollups to enhance transaction speeds and lower costs. It conducts transactions off-chain, reconciling final states on the main Ethereum chain, all while preserving compatibility with Ethereum smart contracts.","source":"@site/docs/user/rollups/optimism.md","sourceDirName":"user/rollups","slug":"/user/rollups/optimism","permalink":"/docs/user/rollups/optimism","draft":false,"unlisted":false,"editUrl":"https://github.com/dappnode/DappnodeDocs/edit/master/docs/user/rollups/optimism.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userSidebar","previous":{"title":"Overview","permalink":"/docs/user/rollups/overview"},"next":{"title":"Overview","permalink":"/docs/user/packages/understanding-dappnode-packages/overview"}}');var s=i(4848),o=i(8453);const r={},l="Optimism Rollup",c={},a=[{value:"Setting Up an Optimism Node",id:"setting-up-an-optimism-node",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"optimism-rollup",children:"Optimism Rollup"})}),"\n",(0,s.jsx)(n.p,{children:"Optimism is Ethereum's Layer 2 solution, leveraging Optimistic Rollups to enhance transaction speeds and lower costs. It conducts transactions off-chain, reconciling final states on the main Ethereum chain, all while preserving compatibility with Ethereum smart contracts."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Optimism Rollup",src:i(6045).A+"",width:"1732",height:"885"})}),"\n",(0,s.jsx)(n.h2,{id:"setting-up-an-optimism-node",children:"Setting Up an Optimism Node"}),"\n",(0,s.jsx)(n.p,{children:"Optimism stands out as the inaugural choice in the Rollups suite. Initiating an Optimism node on Dappnode parallels the familiar Stakers Menu, yet with some distinctions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Utilize an ",(0,s.jsx)(n.code,{children:"op-node"})," client to link with the Optimism Mainnet."]}),"\n",(0,s.jsxs)(n.li,{children:["Employ ",(0,s.jsx)(n.code,{children:"op-geth"})," or ",(0,s.jsx)(n.code,{children:"op-erigon"})," to bridge your ",(0,s.jsx)(n.code,{children:"op-node"})," to Ethereum's execution layer, echoing the beacon chain/consensus client's role on the mainnet."]}),"\n",(0,s.jsxs)(n.li,{children:["For archive nodes, ",(0,s.jsx)(n.code,{children:"op-legacy"})," is essential for transactions predating the Bedrock upgrade."]}),"\n",(0,s.jsx)(n.li,{children:"A connection to an Ethereum Mainnet node is required. If your Dappnode already operates one, the Rollups menu will streamline configuration. Otherwise, integrate a public RPC for Ethereum Mainnet connection."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For a deeper dive, consult Optimism\u2019s documentation:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://op-geth.optimism.io/",children:"OP Geth docs"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/testinprod-io/op-erigon",children:"Test In Prod - OP Erigon"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://community.optimism.io/docs/developers/bedrock/node-operator-guide/",children:"OP Node Operator"})}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},6045:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/optimism-menu-60612170996d4b9863d79b0a737bb280.png"},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);